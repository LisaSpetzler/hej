/* APP ============================================ */

* {
    box-sizing: border-box;
}

:root {
    /* YELLOW */
    --primary: 0, 0, 0;
    --secondary: 255, 255, 255;
    --contrast: 255, 232, 0;
    /* MINT */
    /* --primary: 0, 0, 0;
    --secondary: 255, 128, 0;
    --contrast: 179, 232, 194; */
    /* PETROL */
    /* --primary: 0,0,0; 
  --contrast: 224, 172, 157;
  --secondary: 117, 185, 190;  */
}

body {
    background-color: rgb(var(--contrast));
    color: rgb(var(--primary));
}

.wrapper {
    padding: 2em 1em 1em 1em;
    min-height: 100vh;
    font-family: "Times New Roman";
    letter-spacing: 0.02em;
    font-size: 16px;
}

@media only screen and (min-width: 768px) {
    .wrapper {
        padding: 2em 1em 1em 1em;
        font-size: 22px;
    }
}

@media only screen and (min-width: 768px) {
    .wrapper {
        width: 680px;
        margin: 0 auto;
    }
}

.noscroll {
    overflow: hidden;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: "Inconsolata", monospace;
    font-weight: normal;
    padding: 0;
    margin: 0.1em 0;
}

h1 {
    font-size: 1.2em;
    font-family: "Times New Roman";
    text-decoration: underline;
    font-style: italic;
    letter-spacing: 0.02em;
}

.center {
    text-align: center;
}

h2 {
    font-size: 1.1em;
    /*  letter-spacing: -0.02em;*/
}

.app-name {}

.intro p {
    font-family: "Times New Roman";
    font-style: italic;
}

.intro.small {
    font-size: 0.7em;
}

.intro {
    padding-bottom: 1em;
}

.main {}

img {
    width: 100%;
}

.gif {
    width: 300px;
    height: 0;
    padding-bottom: 300px;
    position: relative;
    max-width: 300px;
}

.gif iframe {
    position: absolute;
}

.button {
    display: block;
    font-style: italic;
    text-decoration: underline;
    width: 100%;
    text-align: center;
    padding: .5em;
}

.button:hover {
    cursor: pointer;
}

.button.disabled {
    color: #555;
    cursor: default;
}

/* FEED ============================================ */

/* FILTER ============================================ */

.side {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    display: none;
    align-items: center;
    padding-left: 1em;
}

@media only screen and (min-width: 768px) {
    .side {
        display: flex;
    }
}

a,
a:hover,
a:visited,
a:active {
    color: black;
    text-decoration: none;
}

.answer a,
a:visited,
a:active {
    text-decoration: underline;
}

.filter {
    text-decoration: none;
    font-style: italic;
    display: inline;
}

.filter-list .filter {
    background: rgba(var(--secondary), 0.6);
    width: fit-content;
}

.filter-toggle .filter {}

.filter a:hover {
    text-decoration: underline;
}

.filter-list .filter.selected {
    /* font-weight: bold; */
    text-decoration: none;
    background: rgba(var(--secondary), 1);
}

.filter-list .filter.selected a:after {
    content: "ùïè";
    font-style: normal;
    padding-left: 1em;
    font-size: 0.7em;
    display: inline-block;
}

.filter.selected a:after:hover {
    text-decoration: none;
}

.filter-list {
    /* vertical-align: middle; */
    list-style: none;
    margin: 0;
    padding: 0;
    font-size: 0.8em;
    line-height: 0.8em;
}

.filter-list.pre-select {
    font-size: 1.0em;
    line-height: inherit;
}

.filter-list.inline {
    display: inline;
}

.filter-list.block .filter {
    padding: 0.3em 0.4em;
    margin-bottom: 0.4em;
    display: block;
}

.filter-list.inline .filter {
    padding: 0em 0.2em;
    margin-right: 0.4em;
}

.filter-toggle {
    padding-top: 1em;
    display: inline-block;
}

/* QUESTION ============================================ */

.question-title.en {
    font-style: italic;
}

.question.list-item {
    margin: 0 0 1.5em 0;
}

.question h2::before {
    font-size: 0.8em;
    padding-right: 0.5em;
    display: inline-block;
}

.question h2:hover::before {
    text-decoration: none !important;
}

.question.pinned h2::before {
    content: "üìå "
}

.question.schedule h2::before {
    content: "üóí "
}

.question.pinned:not(.has-answers) h2::before {
    content: "üìå ";
}

.question:not(.has-answers) h2 {
    font-size: 0.9em;
    text-transform: uppercase;
    font-weight: bold;
}

.question:not(.has-answers) h2::before {
    font-size: 1em;
}

@keyframes fade-in-tiny {
    0% {
        transform: translateY( 2vw);
        opacity: 0;
    }
    100% {
        transform: translateY( 0vw);
        opacity: 1;
    }
}

@media only screen and (min-width: 768px) {
    .question.list-item {
        margin: 0 0 2em 0;
        animation: fade-in-tiny 0.8s;
    }
    .question.list-item.has-answers:hover h2 {
        text-decoration: underline;
        cursor: pointer;
    }
}

.question.full {
    min-height: 100%;
    background-color: rgb(var(--contrast));
}

.question.full h2 {
    margin-bottom: 2em;
    border-bottom: 1px solid black;
}

.question .button {
    width: 100%;
    text-align: center;
    padding: .5em;
}

/* ANSWER ============================================ */

@media only screen and (min-width: 768px) {
    .answer-list.vertical {
        display: flex;
        justify-content: space-between;
    }
    .answer-list.vertical .answer {
        margin-right: 1.5em;
    }
    .answer-list.vertical .answer:last-child {
        margin-right: 0em;
    }
}

.answer-date {
    font-style: italic;
    font-size: 0.8em;
    color: rgba(var(--primary), 0.4);
    display: block;
}

.answer {
    margin-bottom: 1.5em;
}

.answer p {
    margin: 0 0 1em 0;
    line-height: 1.3em;
}

.answer p:last-child {
    margin: 0;
}

/* INPUT ============================================ */

.input-placeholder {
    padding: 0.5em 1em;
    border-top: 2px dashed rgba(var(--primary), 0.2);
    border-bottom: 2px dashed rgba(var(--primary), 0.2);
    margin: 0 -1em 1.5em -1em;
    color: rgba(var(--primary), 0.4);
}

.input-placeholder.thanks {
    color: rgb(var(--primary));
}

.input-placeholder:hover {
    cursor: pointer;
}

@media only screen and (min-width: 768px) {
    .input-placeholder {
        border-left: 2px dashed rgba(var(--primary), 0.2);
        border-right: 2px dashed rgba(var(--primary), 0.2);
    }
}

.input-placeholder h2 {
    margin-bottom: 0.2em;
}

.input-placeholder p {
    font-size: 0.8em;
    margin: 0px;
    font-style: italic;
}

.fullscreen {
    width: 100vw;
    min-height: 100vh;
}

.input {
    background-color: #000;
    color: #ddd;
    z-index: 100;
}

.fade-in {
    animation: 0.4s fade-in;
    animation-fill-mode: both;
}

@keyframes fade-in {
    0% {
        opacity: 0;
        transform: translateY( -4vw);
    }
    100% {
        opacity: 1;
        transform: translateY( 0vw);
    }
}

.input-area {
    width: 100%;
    border: none;
    outline: none;
    color: white;
    background: black;
    font-size: 1.3em;
    font-family: "Inconsolata", monospace;
    color: rgb(var(--secondary));
    margin: 2em 0;
}

.button-send {}

/* PRESELECT ========================================= */

.preselect {
    background: #000;
    color: rgb(var(--contrast));
}

.preselect a {
    color: rgb(var(--contrast));
    font-size: 8em;
}

.change-track-link {
    display: block;
    padding-top: 20px;
}

.change-track-link:hover {
    text-decoration: underline;
}

/* BUTTON ============================================ */

.close {
    text-decoration: underline;
}

/* ANIMATION ============================================ */

.questionmark-animation {
    position: absolute;
    top: 0;
    perspective: 500px;
    perspective-origin: 50% 50%;
}

.questionmark-animation span {
    display: none;
    position: absolute;
    color: #fff;
}

.questionmark-animation.play span {
    display: block;
    animation: 3s raise ease-out calc(var(--d) * 2s);
    animation-fill-mode: both;
}

.questionmark-animation span:after {
    font-family: 'Times New Roman', Times, serif;
    content: "?";
    font-size: 20em;
    display: block;
    transform: translate3d(-50%, -50%, 0);
}

@keyframes raise {
    0% {
        transform: translate3d(50vw, 300vh, calc(var(--z) * -600px));
        opacity: 1;
    }
    80% {
        opacity: 0.8;
    }
    100% {
        opacity: 0;
        transform: translate3d(calc( 50vw + var(--x) * 100vw), -20vh, calc(var(--z) * -600px));
    }
}